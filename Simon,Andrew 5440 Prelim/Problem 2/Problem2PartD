# Code largely from Professor Paszek.

using DifferentialEquations
using Plots
gr(size=(500,500), show = true)  #use the gr backend for plotting
#Function for part D
#u[1] = x; u[2] = y; u[3] = z
function partD!(du,u,p,t)
  alphax = 3.9*10^-2
  alphay = 4.3*10^-3
  betax = 6.1
  betay = 5.7
  degy = 1.05
  degz = 1.04
  zx = 1.3*10^-5
  yz = 11*10^-3
  xz = 12*10^-2
  xy = 7.9*10^-4
  nzx = 2.32
  nxy = 2
  nxz = 2
  nyz = 2
  s = 100000

 du[1] =  (alphax+betax*s)/(1+s+(u[3]/zx)^nzx) - u[1]             #dx/dt
 du[2] =  (alphay +betay*s)/(1+s+(u[1]/xy)^nxy) - degy*u[2]       #dy/dt
 du[3] =  (1)/(1+(u[1]/xz)^nxz+(u[2]/yz)^nyz) - degz*u[3]        #dz/dt
end
u0 = [0.0;0.0;0.0]                      #intial conditions
tspan = (0.0,50)                     #start and end time
prob = ODEProblem(partD!,u0,tspan)     #Create an ODE problem for the PartD function
sol = solve(prob)                       #Solve the system
#Plot the results; the vars=(0,1) argument specifies to plot X (column 1 of sol)
#vs t (column 0 of sol)
plt1 = plot(sol,vars=(0,1), xaxis="t", yaxis = "X" )
display(plt1)

# Plots only needed for interest not question
#Plot the results; the vars=(0,3) argument specifies to plot Z (column 3 of sol)
#vs t
#plt2 = plot(sol,vars=(0,3), xaxis="t", yaxis = "Z")
#display(plt2)
#plt4 = plot(sol,vars=(0,2), xaxis="t", yaxis = "Y")
#display(plt4)
#Plot the results; the vars=(1,2,3) argument specifies to plot X vs Y vs Z
#plt3 = plot(sol,vars=(1,2,3), xaxis="X", yaxis="Y", zaxis="Z")
#display(plt3)
